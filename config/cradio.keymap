#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        asset {
            bindings = <&tog 1>;
            key-positions = <20 9>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            slow-release;
            layers = <1 0>;
        };

        settings-layer-left {
            bindings = <&to 6>;
            key-positions = <0 3>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        settings-layer-right {
            bindings = <&to 6>;
            key-positions = <6 9>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        lgui {
            bindings = <&kp LGUI>;
            key-positions = <30 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        rgui {
            bindings = <&kp RGUI>;
            key-positions = <33 17>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        lalt {
            bindings = <&kp LALT>;
            key-positions = <13 30>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        ralt {
            bindings = <&kp RALT>;
            key-positions = <16 33>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        lshift {
            bindings = <&kp LSHIFT>;
            key-positions = <31 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        rshift {
            bindings = <&kp LSHIFT>;
            key-positions = <32 17>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <13 31>;
            timeout-ms = <50>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        rctrl {
            bindings = <&kp LCTRL>;
            key-positions = <16 32>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        ctrl-shift {
            bindings = <&kp LC(LSHIFT)>;
            key-positions = <16 17 32>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        l_ctrl_shift {
            bindings = <&kp LC(LSHIFT)>;
            key-positions = <12 13 31>;
            timeout-ms = <100>;
            require-prior-idle-ms = <25>;
            layers = <1 0>;
        };

        macros {
            bindings = <&tog 3>;
            key-positions = <0 9>;
        };

        mouse {
            bindings = <&tog 7>;
            key-positions = <31 32>;
        };
    };

    behaviors {
        hold_tap_mod: hold_tap_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_MOD";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            flavor = "balanced";
        };

        mouse_move: mouse_move {
            compatible = "zmk,behavior-input-two-axis";
            label = "MOUSE_MOVE";
            #binding-cells = <1>;
            x-input-code = <0>;
            y-input-code = <1>;
            acceleration-exponent = <0>;
            time-to-max-speed-ms = <15>;
        };

        mouse_press: mouse_press {
            compatible = "zmk,behavior-mouse-key-press";
            label = "MOUSE_PRESS";
            #binding-cells = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        asset {
            bindings = <
&kp Q  &kp W  &kp J  &kp F  &kp G        &kp Y      &kp P  &kp U      &kp L    &kp SEMI
&kp A  &kp S  &kp E  &kp T  &kp D        &kp H      &kp N  &kp I      &kp O    &kp R
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp K      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 2  &kp SPACE    &kp ENTER  &mo 4
            >;
        };

        qwerty {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp SLASH
                     &mo 2  &kp SPACE    &kp RET  &mo 4
            >;
        };

        navigation {
            bindings = <
&kp ESC         &caps_word      &kp CAPS      &kp LCTRL        &kp LEFT_SHIFT    &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp BSPC
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp TAB           &kp LEFT       &kp DOWN       &kp UP        &kp RIGHT  &kp BACKSPACE
&kp LC(Z)       &kp LC(X)       &kp LC(C)     &kp LC(V)        &kp BACKSPACE     &trans         &kp TAB        &kp LEFT_ALT  &trans     &trans
                                              &none            &none             &kp BACKSPACE  &kp DELETE
            >;
        };

        macros {
            bindings = <
&trans     &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans
&trans     &trans     &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans    &trans  &trans  &trans  &trans  &trans
                                 &trans     &trans    &trans  &trans
            >;
        };

        numbers {
            bindings = <
&kp ESC   &kp GRAVE  &kp LS(LPAR)  &kp LBKT      &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RBKT  &kp LS(RPAR)  &kp BACKSLASH  &kp BACKSPACE
&kp N1    &kp N2     &kp N3        &kp N4        &kp N5            &kp N6           &kp N7    &kp N8        &kp N9         &kp N0
&kp LGUI  &kp LALT   &kp LCTRL     &kp LS(PLUS)  &kp MINUS         &kp EQUAL        &kp FSLH  &kp LS(STAR)  &kp BACKSLASH  &kp SQT
                                   &mo 5         &kp LSHFT         &none            &none
            >;
        };

        functions {
            bindings = <
&caps_word  &kp CAPS  &kp TAB    &trans     &trans     &trans   &trans     &trans     &trans    &trans
&kp F1      &kp F2    &kp F3     &kp F4     &kp F5     &kp F6   &kp F7     &kp F8     &kp F9    &kp F10
&kp LGUI    &kp LALT  &kp LCTRL  &kp LSHFT  &kp F11    &kp F12  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
                                 &trans     &trans     &trans   &trans
            >;
        };

        settings {
            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL  &trans        &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans
&bt BT_PRV  &bt BT_NXT      &bt BT_SEL 0  &trans  &trans         &trans       &trans  &trans  &trans  &trans
&trans      &trans          &trans        &trans  &trans         &trans       &trans  &trans  &trans  &trans
                                          &tog 6  &trans         &trans       &tog 6
            >;
        };

        mouse {
            bindings = <
&trans  &trans             &trans             &trans             &trans    &trans                 &trans                 &trans               &trans                  &trans
&trans  &mouse_press RCLK  &mouse_press MCLK  &mouse_press LCLK  &trans    &mouse_move MOVE_LEFT  &mouse_move MOVE_DOWN  &mouse_move MOVE_UP  &mouse_move MOVE_RIGHT  &trans
&trans  &trans             &trans             &trans             &trans    &trans                 &trans                 &trans               &trans                  &trans
                                              &tog 7             &trans    &trans                 &tog 7
            >;
        };
    };
};
