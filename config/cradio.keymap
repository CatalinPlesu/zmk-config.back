#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        asset {
            bindings = <&tog 1>;
            key-positions = <20 29>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            slow-release;
            layers = <1 0>;
        };

        settings-layer-left {
            bindings = <&to 5>;
            key-positions = <0 3>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        settings-layer-right {
            bindings = <&to 5>;
            key-positions = <6 9>;
            timeout-ms = <500>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        lgui {
            bindings = <&kp LGUI>;
            key-positions = <30 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        rgui {
            bindings = <&kp RGUI>;
            key-positions = <33 17>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        lalt {
            bindings = <&kp LALT>;
            key-positions = <13 30>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        ralt {
            bindings = <&kp RALT>;
            key-positions = <16 33>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        lshift {
            bindings = <&kp LSHIFT>;
            key-positions = <31 12>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        rshift {
            bindings = <&kp RSHIFT>;
            key-positions = <32 17>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <13 31>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };

        rctrl {
            bindings = <&kp RCTRL>;
            key-positions = <16 32>;
            timeout-ms = <50>;
            require-prior-idle-ms = <1>;
            layers = <1 0>;
        };
    };

    behaviors {
        hold_tap_mod: hold_tap_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_MOD";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        asset {
            bindings = <
&kp Q  &kp W  &kp J  &kp F  &kp G        &kp Y      &kp P  &kp U      &kp L    &kp SEMI
&kp A  &kp S  &kp E  &kp T  &kp D        &kp H      &kp N  &kp I      &kp O    &kp R
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp K      &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 2  &kp SPACE    &kp ENTER  &mo 3
            >;
        };

        qwerty {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH
                     &mo 2  &kp SPACE    &kp RET  &mo 3
            >;
        };

        navigation {
            bindings = <
&kp ESC                  &caps_word               &kp CAPS                   &kp TAB                          &trans           &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp BSPC
&hold_tap_mod LGUI LGUI  &hold_tap_mod LALT LALT  &hold_tap_mod LCTRL LCTRL  &hold_tap_mod LSHIFT LEFT_SHIFT  &kp BACKSPACE    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans
&kp TAB                  &kp CAPS                 &trans                     &trans                           &trans           &trans    &kp TAB        &trans       &trans     &trans
                                                                             &none                            &none            &kp DEL   &kp BACKSPACE
            >;
        };

        numbers {
            bindings = <
&kp ESC       &kp GRAVE     &kp LS(LPAR)  &kp LBKT      &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RBKT      &kp LS(RPAR)  &trans                &kp BACKSPACE
&kp NUMBER_9  &kp NUMBER_5  &kp NUMBER_0  &kp NUMBER_3  &kp NUMBER_7      &kp NUMBER_6     &kp NUMBER_2  &kp NUMBER_1  &kp NUMBER_4          &kp NUMBER_8
&kp LGUI      &kp LALT      &kp LCTRL     &kp LS(PLUS)  &kp MINUS         &kp EQUAL        &kp FSLH      &kp LS(STAR)  &kp NON_US_BACKSLASH  &kp SQT
                                          &mo 4         &kp LSHFT         &none            &none
            >;
        };

        functions {
            bindings = <
&caps_word  &kp CAPS  &kp TAB    &trans     &trans     &trans   &trans     &trans     &trans    &trans
&kp F1      &kp F2    &kp F3     &kp F4     &kp F5     &kp F6   &kp F7     &kp F8     &kp F9    &kp F10
&kp LGUI    &kp LALT  &kp LCTRL  &kp LSHFT  &kp F11    &kp F12  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
                                 &trans     &trans     &trans   &trans
            >;
        };

        settings {
            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL  &trans        &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans
&bt BT_PRV  &bt BT_NXT      &bt BT_SEL 0  &trans  &trans         &trans       &trans  &trans  &trans  &trans
&trans      &trans          &trans        &trans  &trans         &trans       &trans  &trans  &trans  &trans
                                          &tog 5  &trans         &trans       &tog 5
            >;
        };
    };
};
